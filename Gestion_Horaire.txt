-- Création de la base de données
CREATE DATABASE IF NOT EXISTS gestion_horaire;
USE gestion_horaire;

-- 1. Département
CREATE TABLE departement (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL
);

-- 2. Section
CREATE TABLE section (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    id_departement INT,
    FOREIGN KEY (id_departement) REFERENCES departement(id)
);

-- 3. Promotion
CREATE TABLE promotion (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    id_section INT,
    FOREIGN KEY (id_section) REFERENCES section(id)
);

-- 4. Étudiant
CREATE TABLE etudiant (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100),
    id_promotion INT,
    FOREIGN KEY (id_promotion) REFERENCES promotion(id)
);

-- 5. Cours
CREATE TABLE cours (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titre VARCHAR(100) NOT NULL,
    id_etudiant INT,
    FOREIGN KEY (id_etudiant) REFERENCES etudiant(id)
);

-- 6. Type de cours
CREATE TABLE typecours (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100),
    id_cours INT,
    FOREIGN KEY (id_cours) REFERENCES cours(id)
);

-- 7. Enseignant
CREATE TABLE enseignant (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100),
    id_cours INT,
    FOREIGN KEY (id_cours) REFERENCES cours(id)
);

-- 8. Résultat
CREATE TABLE resultat (
    id INT AUTO_INCREMENT PRIMARY KEY,
    note FLOAT,
    id_cours INT,
    id_etudiant INT,
    FOREIGN KEY (id_cours) REFERENCES cours(id),
    FOREIGN KEY (id_etudiant) REFERENCES etudiant(id)
);

-- 9. Secrétaire de section
CREATE TABLE secretairesection (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100),
    id_section INT,
    FOREIGN KEY (id_section) REFERENCES section(id)
);

-- 10. Disponibilité Enseignant
CREATE TABLE disponibiliteenseignant (
    id INT AUTO_INCREMENT PRIMARY KEY,
    jour VARCHAR(50),
    heure_debut TIME,
    heure_fin TIME,
    id_enseignant INT,
    FOREIGN KEY (id_enseignant) REFERENCES enseignant(id)
);

-- 11. Horaire
CREATE TABLE horaire (
    id INT AUTO_INCREMENT PRIMARY KEY,
    jour VARCHAR(50),
    heure_debut TIME,
    heure_fin TIME,
    id_cours INT,
    id_secretaire INT,
    id_enseignant INT,
    FOREIGN KEY (id_cours) REFERENCES cours(id),
    FOREIGN KEY (id_secretaire) REFERENCES secretairesection(id),
    FOREIGN KEY (id_enseignant) REFERENCES enseignant(id)
);

-- 12. Suivre (association cours - étudiant)
CREATE TABLE suivre (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_etudiant INT,
    id_cours INT,
    FOREIGN KEY (id_etudiant) REFERENCES etudiant(id),
    FOREIGN KEY (id_cours) REFERENCES cours(id)
);
